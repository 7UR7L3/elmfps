var _user$project$Main$viewMessage = function (msg) {
	return _elm_lang$core$Native_Utils.eq(msg, ' ') ? A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$style(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'color', _1: 'white'},
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text('space'),
			_1: {ctor: '[]'}
		}) : A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(msg),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				A2(_elm_lang$core$List$map, _user$project$Main$viewMessage, model.message)),
			_1: {ctor: '[]'}
		});
};
var _user$project$Main$getPlayers = function (p) {
	var _p0 = p;
	if (_p0.ctor === '[]') {
		return {
			ctor: '::',
			_0: '',
			_1: {ctor: '[]'}
		};
	} else {
		if (_p0._1.ctor === '[]') {
			var _p1 = _p0._0;
			return {
				ctor: '::',
				_0: A2(_elm_lang$core$String$append, _p1.name, ': '),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$core$String$append,
						'Position: ',
						_elm_lang$core$Basics$toString(_p1.position)),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$core$String$append,
							'Health: ',
							_elm_lang$core$Basics$toString(_p1.health)),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$core$String$append,
								'Score: ',
								_elm_lang$core$Basics$toString(_p1.score)),
							_1: {ctor: '[]'}
						}
					}
				}
			};
		} else {
			var _p2 = _p0._0;
			return A2(
				_elm_lang$core$List$append,
				{
					ctor: '::',
					_0: A2(_elm_lang$core$String$append, _p2.name, ': '),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$core$String$append,
							'Position: ',
							_elm_lang$core$Basics$toString(_p2.position)),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$core$String$append,
								'Health: ',
								_elm_lang$core$Basics$toString(_p2.health)),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$core$String$append,
									'Score: ',
									_elm_lang$core$Basics$toString(_p2.score)),
								_1: {
									ctor: '::',
									_0: ' ',
									_1: {ctor: '[]'}
								}
							}
						}
					}
				},
				_user$project$Main$getPlayers(_p0._1));
		}
	}
};
var _user$project$Main$getMessage = function (m) {
	var _p3 = m;
	return A2(
		_elm_lang$core$List$append,
		{
			ctor: '::',
			_0: A2(
				_elm_lang$core$String$append,
				'Player ',
				_elm_lang$core$Basics$toString(_p3.which)),
			_1: {
				ctor: '::',
				_0: A2(_elm_lang$core$String$append, 'Time: ', _p3.time),
				_1: {
					ctor: '::',
					_0: '       ',
					_1: {
						ctor: '::',
						_0: ' ',
						_1: {ctor: '[]'}
					}
				}
			}
		},
		_user$project$Main$getPlayers(_p3.players));
};
var _user$project$Main$pToString = F2(
	function (p, i) {
		pToString:
		while (true) {
			var _p4 = p;
			if (_p4.ctor === '::') {
				if (_elm_lang$core$Native_Utils.eq(i, 0)) {
					var _p5 = _p4._0;
					return A2(
						_elm_lang$core$String$append,
						A2(
							_elm_lang$core$String$append,
							A2(
								_elm_lang$core$String$append,
								A2(
									_elm_lang$core$String$append,
									A2(
										_elm_lang$core$String$append,
										A2(
											_elm_lang$core$String$append,
											A2(
												_elm_lang$core$String$append,
												A2(
													_elm_lang$core$String$append,
													_elm_lang$core$Basics$toString(_p5.number),
													';'),
												_p5.name),
											';'),
										_elm_lang$core$Basics$toString(_p5.position)),
									';'),
								_elm_lang$core$Basics$toString(_p5.health)),
							';'),
						_elm_lang$core$Basics$toString(_p5.score));
				} else {
					var _v4 = _p4._1,
						_v5 = i - 1;
					p = _v4;
					i = _v5;
					continue pToString;
				}
			} else {
				return 'fail';
			}
		}
	});
var _user$project$Main$psToString = function (p) {
	var _p6 = p;
	if (_p6.ctor === '[]') {
		return '';
	} else {
		return A2(
			_elm_lang$core$String$append,
			A2(_user$project$Main$pToString, p, 0),
			_user$project$Main$psToString(_p6._1));
	}
};
var _user$project$Main$Player = F5(
	function (a, b, c, d, e) {
		return {number: a, name: b, position: c, health: d, score: e};
	});
var _user$project$Main$getMessageH = F2(
	function (p, s) {
		getMessageH:
		while (true) {
			var _p7 = {ctor: '_Tuple2', _0: p, _1: s};
			if (_p7._1.ctor === '[]') {
				return p;
			} else {
				if (_p7._0.ctor === '[]') {
					var _p12 = _p7._1._1;
					var _p11 = _p7._1._0;
					if (_elm_lang$core$Native_Utils.eq(_p11, '')) {
						var _v8 = {ctor: '[]'},
							_v9 = _p12;
						p = _v8;
						s = _v9;
						continue getMessageH;
					} else {
						if (_elm_lang$core$Native_Utils.eq(_p11, 'something')) {
							return p;
						} else {
							var l = A2(_elm_lang$core$String$split, ';', _p11);
							var _p8 = l;
							if ((((((_p8.ctor === '::') && (_p8._1.ctor === '::')) && (_p8._1._1.ctor === '::')) && (_p8._1._1._1.ctor === '::')) && (_p8._1._1._1._1.ctor === '::')) && (_p8._1._1._1._1._1.ctor === '[]')) {
								var _p10 = _p8._1._1._0;
								return {
									ctor: '::',
									_0: A5(
										_user$project$Main$Player,
										A2(
											_elm_lang$core$Result$withDefault,
											0,
											_elm_lang$core$String$toInt(_p8._0)),
										_p8._1._0,
										A2(
											_elm_lang$core$List$map,
											function (_p9) {
												return A2(
													_elm_lang$core$Result$withDefault,
													0,
													_elm_lang$core$String$toFloat(_p9));
											},
											A2(
												_elm_lang$core$String$split,
												A3(
													_elm_lang$core$String$slice,
													1,
													_elm_lang$core$String$length(_p10),
													_p10),
												',')),
										A2(
											_elm_lang$core$Result$withDefault,
											0,
											_elm_lang$core$String$toInt(_p8._1._1._1._0)),
										A2(
											_elm_lang$core$Result$withDefault,
											0,
											_elm_lang$core$String$toInt(_p8._1._1._1._1._0))),
									_1: A2(
										_user$project$Main$getMessageH,
										{ctor: '[]'},
										_p12)
								};
							} else {
								return {ctor: '[]'};
							}
						}
					}
				} else {
					if (_p7._1._0 === '') {
						return {
							ctor: '::',
							_0: _p7._0._0,
							_1: A2(_user$project$Main$getMessageH, _p7._0._1, _p7._1._1)
						};
					} else {
						var _p16 = _p7._1._0;
						if (_elm_lang$core$Native_Utils.eq(_p16, 'something')) {
							return p;
						} else {
							var l = A2(_elm_lang$core$String$split, ';', _p16);
							var _p13 = l;
							if ((((((_p13.ctor === '::') && (_p13._1.ctor === '::')) && (_p13._1._1.ctor === '::')) && (_p13._1._1._1.ctor === '::')) && (_p13._1._1._1._1.ctor === '::')) && (_p13._1._1._1._1._1.ctor === '[]')) {
								var _p15 = _p13._1._1._0;
								return {
									ctor: '::',
									_0: A5(
										_user$project$Main$Player,
										A2(
											_elm_lang$core$Result$withDefault,
											0,
											_elm_lang$core$String$toInt(_p13._0)),
										_p13._1._0,
										A2(
											_elm_lang$core$List$map,
											function (_p14) {
												return A2(
													_elm_lang$core$Result$withDefault,
													0,
													_elm_lang$core$String$toFloat(_p14));
											},
											A2(
												_elm_lang$core$String$split,
												',',
												A3(
													_elm_lang$core$String$slice,
													1,
													_elm_lang$core$String$length(_p15) - 1,
													_p15))),
										A2(
											_elm_lang$core$Result$withDefault,
											0,
											_elm_lang$core$String$toInt(_p13._1._1._1._0)),
										A2(
											_elm_lang$core$Result$withDefault,
											0,
											_elm_lang$core$String$toInt(_p13._1._1._1._1._0))),
									_1: A2(_user$project$Main$getMessageH, _p7._0._1, _p7._1._1)
								};
							} else {
								return {ctor: '[]'};
							}
						}
					}
				}
			}
		}
	});
var _user$project$Main$Model = F4(
	function (a, b, c, d) {
		return {time: a, which: b, players: c, message: d};
	});
var _user$project$Main$init = function () {
	var pls = {
		ctor: '::',
		_0: A5(
			_user$project$Main$Player,
			0,
			'Player 1',
			{
				ctor: '::',
				_0: 0,
				_1: {
					ctor: '::',
					_0: 1,
					_1: {
						ctor: '::',
						_0: 2,
						_1: {ctor: '[]'}
					}
				}
			},
			1000,
			0),
		_1: {
			ctor: '::',
			_0: A5(
				_user$project$Main$Player,
				1,
				'Player 2',
				{
					ctor: '::',
					_0: -20,
					_1: {
						ctor: '::',
						_0: 45.6,
						_1: {
							ctor: '::',
							_0: -73.2,
							_1: {ctor: '[]'}
						}
					}
				},
				750,
				2),
			_1: {
				ctor: '::',
				_0: A5(
					_user$project$Main$Player,
					2,
					'Player 3',
					{
						ctor: '::',
						_0: 34,
						_1: {
							ctor: '::',
							_0: 2314,
							_1: {
								ctor: '::',
								_0: -2435,
								_1: {ctor: '[]'}
							}
						}
					},
					500,
					12),
				_1: {
					ctor: '::',
					_0: A5(
						_user$project$Main$Player,
						3,
						'Frank',
						{
							ctor: '::',
							_0: 6,
							_1: {
								ctor: '::',
								_0: 66,
								_1: {
									ctor: '::',
									_0: -666,
									_1: {ctor: '[]'}
								}
							}
						},
						12,
						6666),
					_1: {ctor: '[]'}
				}
			}
		}
	};
	return {
		ctor: '_Tuple2',
		_0: A4(
			_user$project$Main$Model,
			'0',
			3,
			pls,
			{
				ctor: '::',
				_0: 'Start!',
				_1: {ctor: '[]'}
			}),
		_1: _elm_lang$core$Platform_Cmd$none
	};
}();
var _user$project$Main$getMessage2 = F2(
	function (m, s) {
		var _p17 = {ctor: '_Tuple2', _0: m, _1: s};
		if (_p17._1.ctor === '[]') {
			return _user$project$Main$getMessage(m);
		} else {
			return _user$project$Main$getMessage(
				A4(
					_user$project$Main$Model,
					_p17._0.time,
					_p17._0.which,
					A2(_user$project$Main$getMessageH, _p17._0.players, s),
					_p17._0.message));
		}
	});
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p18 = {ctor: '_Tuple2', _0: msg, _1: model};
		if (_p18._0.ctor === 'Send') {
			var _p20 = _p18._1.which;
			var _p19 = _p18._1.players;
			return {
				ctor: '_Tuple2',
				_0: A4(
					_user$project$Main$Model,
					_elm_lang$core$Basics$toString(_p18._0._0),
					_p20,
					_p19,
					_p18._1.message),
				_1: A2(
					_elm_lang$websocket$WebSocket$send,
					'ws://localhost:3000',
					A2(_user$project$Main$pToString, _p19, _p20))
			};
		} else {
			var _p21 = _p18._0._0;
			var ap = A2(
				_user$project$Main$getMessageH,
				_p18._1.players,
				A2(_elm_lang$core$String$split, '?', _p21));
			var pls = A2(_elm_lang$core$Debug$log, 'pls', 1);
			var $throw = A2(_elm_lang$core$Debug$log, 'Altered Players', ap);
			return {
				ctor: '_Tuple2',
				_0: A4(
					_user$project$Main$Model,
					_p18._1.time,
					_p18._1.which,
					ap,
					A2(
						_user$project$Main$getMessage2,
						model,
						A2(_elm_lang$core$String$split, '?', _p21))),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		}
	});
var _user$project$Main$NewMessage = function (a) {
	return {ctor: 'NewMessage', _0: a};
};
var _user$project$Main$Send = function (a) {
	return {ctor: 'Send', _0: a};
};
var _user$project$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: A2(_elm_lang$websocket$WebSocket$listen, 'ws://localhost:3000', _user$project$Main$NewMessage),
			_1: {
				ctor: '::',
				_0: A2(_elm_lang$core$Time$every, _elm_lang$core$Time$second, _user$project$Main$Send),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
